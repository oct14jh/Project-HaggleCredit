<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.egemmerce.hc.repository.mapper.ItemSearchMapper">

<!-- 검색 (판매상품 기준) - 내림차순 -->
<select id="searchingSellDown" parameterType="SortProcess" resultType="ItemSellSet">
select * 
from (select * 
		from item_sell inner join (select ANY_VALUE(ip_no) as ip_no, ip_item_no, ANY_VALUE(ip_value) as ip_value 
									from item_photo 
                                    group by ip_item_no) tmp_table 
						on is_item_no = tmp_table.ip_item_no) final_table1
left join (select ap_item_no, count(*) as joiner_cnt 
			from auction_participant 
            group by ap_item_no) final_table2 
on final_table1.ip_item_no = final_table2.ap_item_no
where is_category_main like concat(concat("%",#{ctgrMain}),"%") and is_item_no in (select i_no from item where i_completed = "false")
and is_category_sub like concat(concat("%",#{ctgrSub}),"%")
and is_item_name like concat(concat("%", #{word}), "%")
order by ${sortName} desc
limit #{pageNo}, 100;
</select>

<!-- 검색 (판매상품 기준) - 오름차순 -->
<select id="searchingSellUp" parameterType="SortProcess" resultType="ItemSellSet">
select * 
from (select * 
		from item_sell inner join (select ANY_VALUE(ip_no) as ip_no, ip_item_no, ANY_VALUE(ip_value) as ip_value 
									from item_photo 
                                    group by ip_item_no) tmp_table 
						on is_item_no = tmp_table.ip_item_no) final_table1
left join (select ap_item_no, count(*) as joiner_cnt 
			from auction_participant 
            group by ap_item_no) final_table2 
on final_table1.ip_item_no = final_table2.ap_item_no
where is_category_main like concat(concat("%",#{ctgrMain}),"%") and is_item_no in (select i_no from item where i_completed = "false")
and is_category_sub like concat(concat("%",#{ctgrSub}),"%")
and is_item_name like concat(concat("%", #{word}), "%")
order by ${sortName}
limit #{pageNo}, 100;
</select>

<!-- 검색 (카테고리 개수 띄우기) -->
<select id="searchingCount" parameterType="string" resultType="CtgrCountSet">
select is_category_main, count(*) as cnt
  from item_sell
where is_item_name like concat(concat("%",#{word}), "%")
group by is_category_main
order by substring(is_category_main, -3);
</select>


<!-- -->
<!-- 검색 (판매상품 기준) - 내림차순 -->
<select id="searchingBuyDown" parameterType="SortProcess" resultType="ItemBuySet">
select * 
from (select * 
		from item_buy left join (select ANY_VALUE(ip_no) as ip_no, ip_item_no, ANY_VALUE(ip_value) as ip_value 
									from item_photo 
                                    group by ip_item_no) tmp_table 
						on ib_item_no = tmp_table.ip_item_no) final_table1
left join (select ap_item_no, count(*) as joiner_cnt 
			from auction_participant 
            group by ap_item_no) final_table2 
on final_table1.ip_item_no = final_table2.ap_item_no
where ib_category_main like concat(concat("%",#{ctgrMain}),"%") and ib_item_no in (select i_no from item where i_completed = "false")
and ib_category_sub like concat(concat("%",#{ctgrSub}),"%")
and ib_name like concat(concat("%", #{word}), "%")
order by ${sortName} desc
limit #{pageNo}, 100;
</select>

<!-- 검색 (판매상품 기준) - 오름차순 -->
<select id="searchingBuyUp" parameterType="SortProcess" resultType="ItemBuySet">
select * 
from (select * 
		from item_buy left join (select ANY_VALUE(ip_no) as ip_no, ip_item_no, ANY_VALUE(ip_value) as ip_value 
									from item_photo 
                                    group by ip_item_no) tmp_table 
						on ib_item_no = tmp_table.ip_item_no) final_table1
left join (select ap_item_no, count(*) as joiner_cnt 
			from auction_participant 
            group by ap_item_no) final_table2 
on final_table1.ip_item_no = final_table2.ap_item_no
where ib_category_main like concat(concat("%",#{ctgrMain}),"%") and ib_item_no in (select i_no from item where i_completed = "false")
and ib_category_sub like concat(concat("%",#{ctgrSub}),"%")
and ib_name like concat(concat("%", #{word}), "%")
order by ${sortName}
limit #{pageNo}, 100;
</select>

<!-- 검색 (카테고리 개수 띄우기) -->
<select id="searchingCount2" parameterType="string" resultType="CtgrCountSet">
select ib_category_main, count(*) as cnt
  from item_buy
where ib_name like concat(concat("%",#{word}), "%")
group by ib_category_main
order by substring(ib_category_main, -3);
</select>




</mapper>
